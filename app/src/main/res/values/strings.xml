<resources>
    <string name="app_name">Info</string>
    <string name="example">Пример:</string>
    <string name="exit">Выход</string>
    <string name="changeText">Выберите тему:</string>
    <string name="right">-></string>
    <string name="teory10">ОБЪЕМ ПАМЯТИ ТЕКСТОВЫХ ДАННЫХ</string>
    <string name="teory11">     Основная формула для решения 1 задания ОГЭ по информатике:</string>
    <string name="teory12">Iоб = k * i</string>
    <string name="teory13">Iоб — объем сообщения\nk — количество символов в сообщении\n</string>
    <string name="teory14">Кроме того, может пригодиться формула Хартли:</string>
    <string name="teory15">N – количество равновероятностных событий,\n\ni – количество информации (бит) об одном таком событии (минимальное целое число)</string>
    <string name="teory16">СКОРОСТЬ ПЕРЕДАЧИ ИНФОРМАЦИИ</string>
    <string name="teory17">Перечислим основные формулы, которые необходимо знать при решении 1 задания ОГЭ, связанного со скоростью передачи информации.</string>
    <string name="teory18">Скорость передачи информации определяется по формуле:</string>
    <string name="teory19">V = I / t</string>
    <string name="teory111">измеряется в бит/с\nV — скорость передачи данных\nI — объем (размер) передаваемого файла (сообщения)\nt — время, за которое передается файл (сообщение)</string>
    <string name="teory112">Для верного вычисления обычно необходимо все значения переводить в следующие единицы измерения:\nt — секунды (с)\nI — бит</string>
    <string name="teory113">Пропорциональные зависимости в формулах</string>
    <string name="teory114">В заданиях на нахождение скорости передачи информации или размера файла часто необходимо учитывать пропорциональную зависимость:</string>
    <string name="teory115">При увеличении скорости передачи информации (V) в определенное количество раз, время передачи (t) уменьшится в такое же количество раз (при неизменном размере файла).
И наоборот: при уменьшении скорости передачи информации в определенное количество раз, время передачи увеличится в такое же количество раз (при неизменном размере файла).</string>
    <string name="teory116">V (скорость) была 4 бит/с\nt (время) = 2 c\nV стала 2 бит/с (уменьшилась в 2 раза)\n\nЧему равно t?\n\nТак как V уменьшилась в 2 раза, то t увеличится в 2 раза\nОтвет: t = 2*2 = 4 с</string>
    <string name="teory117">При увеличении скорости передачи информации (V) в определенное количество раз, количество передаваемой информации (I) может быть увеличено в такое же количество раз (при неизменном времени).
И наоборот: при уменьшении скорости передачи информации (V) в определенное количество раз, количество передаваемой информации (I), которое может быть передано, уменьшится в такое же количество раз (при неизменном времени).</string>
    <string name="teory118">V (скорость) была 4 бит/с\nI (размер) = 16 бит\nV стала 2 бит/с (уменьшилась в 2 раза)\n\nФайл какого размера можно передать, т.е. I = ?\n\nТак как V уменьшилась в 2 раза, то и I уменьшится в 2 раза\nОтвет: I = 16/2 = 8 бит</string>

    <string name="teory20">Кодирование</string>
    <string name="teory21">— это форма представления информации, удобная для её хранения, передачи и обработки. При кодировании символам исходного алфавита ставятся в соответствие так называемые коды.</string>
    <string name="teory23">Расшифровка или декодирование представляет собой восстановление исходного сообщения из последовательности кодов.</string>
    <string name="teory24">Декодирование может быть однозначным и многозначным. Если при расшифровке возможно получить несколько различных вариантов исходного сообщения, то такое декодирование неоднозначно.</string>
    <string name="teory25">При расшифровке с единственным возможным результатом сообщения имеет место однозначное декодирование.</string>
    <string name="teory26">Иногда процесс декодирования проще выполнять с конца зашифрованного сообщения.</string>

    <string name="teory30">Для подготовки к решению 3 задания ОГЭ по информатике следует вспомнить знаки сравнения.</string>
    <string name="teory31">В логических выражениях используются следующие знаки сравнения:</string>
    <string name="teory32">В логических выражениях участвуют всего два значения выражений: ИСТИНА и ЛОЖЬ.</string>
    <string name="teory33">Рассмотрим результат выполнения логических выражений для двух высказываний — А и Б:</string>
    <string name="teory34">С операцией ИЛИ результатом будет ЛОЖЬ только в одном единственном случае, — когда оба выражения — А и Б — ложны</string>
    <string name="teory35">С операцией И результатом будет ИСТИНА только в одном единственном случае, — когда оба выражения — А и Б — истинны</string>
    <string name="teory36">Результаты для операции ИЛИ:</string>
    <string name="teory37">Результаты для операции И:</string>
    <string name="teory38">Результаты для операции НЕ (отрицание):</string>
    <string name="teory39">Порядок выполнения логических операций:</string>
    <string name="teory310">Если отрицание НЕ стоит перед скобкой с выражением, то НЕ ставится перед каждой частью выражения в скобках и при этом операция внутри скобок меняется:</string>
    <string name="teory311">НЕ перед скобками с общим выражением:</string>

    <string name="teory40">Графы</string>
    <string name="teory41">Иногда очень трудно структурировать информацию описанными структурами из-за сложных «взаимоотношений» между объектами. Тогда можно использовать графы:</string>
    <string name="teory42">Граф</string>
    <string name="teory43">– это набор вершин и связей между ними, называющихся рёбрами:</string>
    <string name="teory44">Матрица и список смежности</string>
    <string name="teory45">Связный граф</string>
    <string name="teory46">– это граф, между любыми вершинами которого существует путь.</string>
    <string name="teory47">Дерево</string>
    <string name="teory48">– это связный граф без циклов (замкнутых участков).</string>
    <string name="teory49">Взвешенные графы и весовая матрица</string>
    <string name="teory410">У взвешенных графов указан «вес ребра»:</string>
    <string name="teory411">Из взвешенных графов получается весовая матрица, обратное преобразование тоже возможно.</string>
    <string name="teory412">ПОИСК КРАТЧАЙШЕГО ПУТИ (ПЕРЕБОР)</string>
    <string name="teory413">Определение кратчайшего пути между пунктами A и D:</string>
    <string name="teory414">В заданиях ОГЭ этой темы чаще всего используются две информационные модели — таблицы и схемы.</string>
    <string name="teory415">Информация в таблице строится по следующим правилам: на пересечении строки и столбца находится информация, характеризующая комбинацию этой строки и столбца.</string>
    <string name="teory416">На схеме информация строится по следующему правилу: если между объектами схемы имеется связь, то она отображается линией, соединяющей названия этих объектов на схеме.</string>


    <string name="teory50">У исполнителя Альфа две команды, которым присвоены номера:\n\n
1. прибавь 1\n
2. умножь на b\n\n
(b – неизвестное натуральное число; b ≥ 2)\n
Первая из них увеличивает число на экране на 1, втора умножает его на b.\n
Алгоритм для исполнителя Альфа – это последовательность номеров команд.\n\n

Найдите значение числа b, при котором из числа 6 по алгоритму 11211 будет получено число 82.</string>
    <string name="teory51">Решение</string>
    <string name="teory52">Запишем все действия исходной программы 11211. Учтем, что исходное число — 6. В целях соблюдения верной последовательности операций будем использовать скобки:</string>
    <string name="teory53">В результате программы алгоритм выдает число 82. Значит, выполним уравнение:</string>
    <string name="teory54">Упростим уравнение и найдем неизвестное b:</string>
    <string name="teory55">Ответ: 10</string>


    <string name="teory60">ЛИНЕЙНЫЕ АЛГОРИТМЫ </string>
    <string name="teory61">Оператор присваивания </string>
    <string name="teory62">Для решения задач программе требуются данные. Данные хранятся в переменных, которые имеют свои имена — идентификаторы. </string>
    <string name="teory63">идентификаторы X или Y, или более длинные идентификаторы переменных — number1, counter и т.п. </string>
    <string name="teory64">Идентификаторы состоят из буквы, за которой могут следовать буквы, цифры или символ подчеркивания </string>
    <string name="teory65">Чтобы задать переменной какое-либо значение используется оператор присваивания. Оператор присваивания (в Паскале) обозначается как :=, выполняет правую часть выражения и присваивает результат переменной, расположенной в левой части выражения: </string>
    <string name="teory66">В таком случае правильно говорить, что переменной x присвоено значение 5.\n
После того как переменной присвоено какое-то значение, можно это значение «переприсвоить», т.е. назначить другое значение:Ы </string>
    <string name="teory67">x:= 2\ny:= 3\nx:= y+2\nВ результате в переменной x находится значение 5, т.к. 3 + 2 = 5. </string>
    <string name="teory68">Арифметические операции </string>
    <string name="teory69">Порядок выполнения операций </string>
    <string name="teory610">1.вычисление выражений в скобках;\n
умножение, деление слева направо;\n
сложение и вычитание слева направо. </string>
    <string name="teory611">ПРОСТЕЙШИЕ ЦИКЛИЧЕСКИЕ АЛГОРИТМЫ </string>
    <string name="teory612">Цикл </string>
    <string name="teory613">— это фрагмент кода программы для исполнителя, который осуществляет некоторые действия определенное количество раз.</string>
    <string name="teory614">Пример на python, цикл for:</string>
    <string name="teory615">Цикл выполняется пять раз, потому что:\n
k — счетчик цикла, который изменяет свое значение, начиная от одного и, заканчивая пятью;\n
в цикле выполняет одно действие: i += 2, т.е. к переменной i прибавляется 2.</string>
    <string name="teory616">ЦИКЛИЧЕСКИЕ АЛГОРИТМЫ ОБРАБОТКИ МАССИВА ЧИСЕЛ </string>
    <string name="teory617">Массивы чисел</string>
    <string name="teory618">— это последовательность чисел, которые принадлежат одной и той же переменной (называемой «массив») и имеют порядковые номера — индексы. Массив часто именуется таблицей. </string>
    <string name="teory619">Пример инициализации массива и работы с ним в Питоне (Python): </string>


    <string name="teory70">Адресация в Интернете</string>
    <string name="teory71">Адрес документа в Интернете (с английского — URL — Uniform Resource Locator) состоит из следующих частей:</string>
    <string name="teory72">-протокол передачи данных; может быть:</string>
    <string name="teory73">http (для Web-страниц) или\n\n
                            ftp (для передачи файлов)\n\n
                            встречается также защищенный протокол https;</string>
    <string name="teory74">-символы-разделители ://, отделяющие название протокола от остальной части адреса;\n\n
                            -доменное имя сайта (или IP-адрес);\n\n
                            -может присутствовать также: каталог на сервере, где располагается файл;\n\n
                            -имя файла.</string>
    <string name="teory75">Каталоги на сервере разделяются прямым слэшем «/»</string>
    <string name="teory76">Пример:</string>
    <string name="teory77">1.имя протокола сетевой службы – определяет тип сервера HTTP (протокол передачи гипертекста);\n\n
2.разделитель в виде символа двоеточия и двух символов Slash;\n\n
3.полное доменное имя сервера;\n\n
4.путь поиска web-документа на компьютере;\n\n
5.имя web-сервера;\n\n
6.домен верхнего уровня «org»;\n\n
7.имя национального домена «ru»;\n\n
8.каталог main на компьютере;\n\n
9.каталог news в каталоге main;\n\n
10.конечная цель поиска – файл main_news.html.</string>


    <string name="teory80">Поисковые запросы:</string>
    <string name="teory81">операция «И» (&amp;) в поисковом запросе всегда ограничивает поиск</string>
    <string name="teory82">(уменьшает количество страниц в выдаче), т. е., в ответ на запрос яблоко И груша поисковый сервер выдаст меньше страниц, чем на запрос яблоко, потому что будет искать страницы, на которых присутствуют оба этих слова;</string>
    <string name="teory83">Чем больше в запросе операций «И», тем меньше результатов</string>
    <string name="teory84">операция «ИЛИ» (|) в поисковом запросе всегда расширяет поиск</string>
    <string name="teory85">(увеличивает количество страниц в выдаче), т. е., в ответ на запрос яблоко ИЛИ груша поисковик выдаст больше страниц, чем на запрос яблоко, потому что будет искать страницы, на которых присутствует хотя бы одно из этих слов (или сразу оба слова).</string>
    <string name="teory86">Чем больше в запросе «ИЛИ», тем больше результатов</string>
    <string name="teory87">Круги Эйлера-Вена:</string>
    <string name="teory88">Операция «И» представляется как умножение (пересечение).\n
                            Операция «ИЛИ» представляется как сложение (объединение).\n
                            Заштрихованная область при объединении больше, чем при пересечении.</string>
    <string name="teory89">Пример использования кругов Эйлера:</string>
    <string name="teory810">Сколько сайтов будет найдено по запросу</string>
    <string name="teory811">Глинка &amp; Бах &amp; Лист</string>
    <string name="teory812">Упрощение логических выражений:</string>
    <string name="teory813">(A &amp; B) | C = (A | C) &amp; (B | C)</string>
    <string name="teory814">(A | B) &amp; C = (A &amp; C) | (B &amp; C)</string>


    <string name="teory90">ПОИСК КОЛИЧЕСТВА ПУТЕЙ</string>
    <string name="teory91">Если в город R из города A можно добраться только из городов X, Y и Z, то количество различных путей из города A в город R равно сумме числа различных путей проезда из A в X, из A в Y и из A в Z, то есть:</string>
    <string name="teory92">Nr = Nx + Ny + Nz</string>
    <string name="teory93">где NR — это количество путей из вершины A в вершину R</string>
    <string name="teory94">Число путей не бесконечно, исключением является только схема, в которой есть циклы – замкнутые пути.</string>


    <string name="teory100">ДВОИЧНАЯ СИСТЕМА СЧИСЛЕНИЯ</string>
    <string name="teory101">Перевод чисел из 10-й системы счисления в двоичную:</string>
    <string name="teory102">Перевод чисел из двоичной системы счисления в десятичную:</string>
    <string name="teory103">ВОСЬМЕРИЧНАЯ СИСТЕМА СЧИСЛЕНИЯ</string>
    <string name="teory104">Перевод чисел из десятичной системы счисления в восьмеричную</string>
    <string name="teory105">Перевод чисел из восьмеричной сист. сч-я в десятичную</string>
    <string name="teory106">Перевод чисел из 8-й сист. сч-я в 2-ую и обратно триадами</string>


    <string name="teory110">Решение задания 11</string>
    <string name="teory11_1">В одном из произведений А.П. Чехова, текст которого приведён в подкаталоге каталога Проза, героиня произносит такую фразу: «Сегодня я в мерехлюндии, невесело мне, и ты не слушай меня».
С помощью поисковых средств операционной системы и текстового редактора или браузера выясните имя этой героини.</string>
    <string name="teory11_2">Решение:</string>
    <string name="teory11_3">Поиск следует начать с каталога Проза. Для этого следует открыть папку Документы или Этот компьютер (или подобные названия в зависимости от операционной системы).\n\n
Если не известно заранее расположение каталога, то ввести название каталога в строке поиска открытого окна:</string>
    <string name="teory11_4">Открыть найденный каталог. После чего в данном каталоге найти подкаталог с названием Чехов и открыть его.\n
В каталоге расположены файлы разного типа и с разными названиями. Рассмотрим варианты поиска в различного типа файлах.\n
В файле .docx или .doc (Microsoft word):\n\n

Откройте файл и нажмите сочетание клавиш [ctrl] [F] или в меню Главная выберите пункт Найти:\n\n
В строке поиска введите искомую фразу и чаще заменяя букву ё на е. В нашем случае буква отсутствует.\n
Щелкните Найти. Если фраза найдена, то по контексту найдите главную героиню (если сюжет не известен, то лучше смотреть ближе к концу текста).\n
В файле .txt(Блокнот):\n\n

Откройте файл и нажмите сочетание клавиш [ctrl] [F] или в меню Правка выберите пункт Найти.\n\n

Повторите такие же действия поиска искомого слова, как и для предыдущего типа файла.\n
В файле .html(браузер):\n\n

Откройте файл и нажмите сочетание клавиш [ctrl] [F].\n\n
В различных браузерах отобразится разное поле для поиска. Повторите такие же действия поиска искомого слова, как и для предыдущего типа файла.</string>
    <string name="teory11_5">Ответ: Маша (Три сестры)</string>


    <string name="teory120">Файлы и каталоги</string>
    <string name="teory121">Файлы, размещенные в памяти компьютера, имеют имя и расширение. Имя и расширение файла отделяются символом точка (.). Пробел не должен стоять ни перед, ни после точки:</string>
    <string name="teory122">Расширение файла указывает на то, в какой программе можно открыть этот файл, или, другими словами, к какому типу данных относится этот файл:</string>
    <string name="teory123">Каталоги (папки) служат для удобства размещения файлов в памяти компьютера.</string>
    <string name="teory124">Корневой каталог:</string>
    <string name="teory125">Размещение файла в корневом каталоге означает хранение его непосредственно на диске, без использования каталогов:</string>
    <string name="teory126">Файловая система (иерархия)</string>
    <string name="teory127">Файл — это область в памяти компьютера (на диске), которая имеет имя и расширение, записанных через точку:</string>
    <string name="teory128">Имя файлу дает его создатель, т.е. человек, который создал этот файл в определенной программе, либо сама программа задает его автоматически.</string>
    <string name="teory129">Расширение файла определяет, к какому типу файлов он относится или, другими словами, какая информация в нем хранится: например, текстовый файл, файл-изображение, файл электронной таблицы, видео-файл и т.п.\n
Рассмотрим некоторые расп0остранённые расширения файлов:</string>
    <string name="teory1210">Рассмотрим хранение файлов на локальном компьютере:</string>
    <string name="teory1211">файлы на диске хранятся в каталогах (папках);</string>
    <string name="teory1212">внутри каталогов могут находиться другие каталоги, таким образом, организуется сложная структура каталогов — иерархическая структура, называемая деревом каталогов;</string>
    <string name="teory1213">главный каталог диска называется корневым каталогом и обозначается буквой логического диска, за которой следует двоеточие и знак «\» (обратный слэш); например, A:\ – это обозначение корневого каталога диска А.</string>
    <string name="teory1214">Если в примере добавить файл с именем «file.jpg» и расположить его в папке 2007, то адрес файла на диске (или полный путь файла) будет:</string>
    <string name="teory1215">каждый каталог (кроме корневого) имеет один единственный «родительский» каталог – это тот каталог, внутри которого и располагается данный каталог; например, для каталога 2007 родительской папкой является Фото</string>
    <string name="teory1216">полный адрес каталога – это перечисление всех каталогов, в которые нужно войти, чтобы попасть в данный каталог (начиная с корневого каталога диска); например:</string>
    <string name="teory1217">таким образом, полный адрес файла состоит из адреса каталога, в котором он находится, символа \ и имени файла; еще пример:</string>
    <string name="teory1218">Допустим, на жестком диске компьютера имеются следующие папки (каталоги) с файлами:</string>
    <string name="teory1219">Получим дерево:</string>
    <string name="teory1220">маска — выделение группы файлов по их именам; имена этих файлов имеют общие свойства, например, одинаковое расширение\n\n
в масках, кроме стандартных символов используются два специальных символа: звездочка «*» и знак вопроса «?»;\n\n
звездочка «*» обозначает любое количество любых символов, в том числе, может обозначать 0 символов;\n\n
знак вопроса «?» обозначает ровно один любой символ.</string>
    <string name="teory1221">имя.расширение</string>
    <string name="teory1222">C:\Фото\2007\file.jpg - полный путь файла file.jpg</string>
    <string name="teory1223">С:\USER\BIN\SCHOOL - полный путь каталога SCHOOL</string>
    <string name="teory1224">C:\\n
или \n
D:\</string>

    <string name="teory130">РАБОТА С MICROSOFT POWER POINT</string>
    <string name="teory131">1. Открытие программы: нажмите на кнопку Пуск и выберите пункт Программы →
MicrosoftOffice → Microsoft Power Point. Открылся макет первого слайда презентации.\n\n
2. Для замены текста макета, щелкните по тексту мышей (например, по надписи «Заголовок») и вводите нужный текст с клавиатуры. Затем нажмите на другую область текста и изменяйте ее таким же образом.\n\n
3.Чтобы удалить ненужный объект или текст, щелкните мышей на его рамке и нажмите кнопку Delete на клавиатуре, если объект не удалился, проделайте ту же операцию второй раз.\n\n
4. Добавление слайда: Выберите меню Главная → Создать слайд. Появилось окно с макетами слайда. Выберите подходящий макет, нажав на него мышей.\n\n
5. Добавление текста (надписи): В меню Вставка щелкните кнопку Надпись или другой вариант текста. «Растяните» курсором мыши область для надписи на свободном месте экрана. Перемещать надпись можно, «взявшись» за середину надписи, и перетаскивая ее мышей.\n\n
6. Чтобы изменить формат текста, т.е. изменить шрифт, размер и цвет шрифта, выделите этот текст мышей (нажмите левой кнопкой мыши на начале текста, и, не отжимая, протяните до конца текста, отпустите кнопку). В меню Главная щелкните по кнопке Цвет текста — для изменения цвета, Размер шрифта — для изменения размера и Шрифт — для изменения самого шрифта.\n\n
7. Добавление картинки при использовании макета с картинкой: дважды щелкните мышей по значку Рисунки на макете. В открывшемся окне проводника найдите необходимый файл изображения.\n\n
8. Добавление картинки, не используя макет: нажмите меню Вставка → Рисунки, чтобы добавить изображение из памяти компьютера или с любого носителя информации выберите. В открывшемся окне Проводника выберите тот диск, где расположены нужные картинки, затем необходимый каталог. Нажмите на нужную картинку и щелкните кнопку Вставить.\n\n
9. Создание списка: для создания списка вставьте обычный текст в меню Вставка, а затем нажмите на кнопке Маркеры на панели инструментов меню Главная. Введите текст первого пункта и нажмите Enter на клавиатуре, чтобы вводить второй пункт.\n\n
10. Фон слайда: для изменения фона слайда щелкните правой кнопкой мыши на пустой области экрана и выберите пункт Формат фона. Отметьте пункт Сплошная заливка, если вы хотите однотонный фон; выберите цвет, щелкнув по кнопке с цветом. Отметьте пункт Градиентная заливка, если вы хотите «переходящий» цвет фона; выберите название заготовки и угол направления градиента. Отметьте пункт Рисунок или текстура и выберите подходящую структуру, щелкнув по кнопке со структурами.\n\n
11. Стиль слайда из шаблона: Выберите нужный слайд. Перейдите в меню Конструктор и выберите подходящий стиль, щелкая курсором мыши на представленные стили. Щелкните на понравившемся стиле мышей и продолжайте работу с презентацией.\n\n
12. Рисование фигур: Чтобы нарисовать тот или иной объект из заготовок, выберите меню Вставка → Фигуры. В открывшемся списке выберите нужную фигуру и затем «растяните» курсором мыши область на слайде, где она должна находиться. Чтобы изменить размер объектов, двигайте маркеры на концах объектов. Чтобы изменить цвет и заливку фигур, перейдите в меню Формат фигуры.\n\n
13. Рисование: Чтобы нарисовать тот или иной объект, выберите меню Рисование.\n\n
14. Перенос, копирование, удаление слайдов: Последовательность слайдов можно менять, перетаскивая их мышей в области структуры слайдов (в левой части экрана обычного режима). Чтобы удалить слайд, следует выделить его в области структуры слайда и нажать Delete на клавиатуре, либо выбрать в контекстном меню выделенного слайда пункт Вырезать. Копирование слайда осуществляется через контекстное меню слайда в области структуры.\n\n
15. Добавление колонтитулов: меню Вид → Образец слайдов. Выберите нужный макет слайда и добавьте надпись колонтитула. Когда колонтитул готов, щелкните по кнопке Закрыть образец.\n\n
16. Добавление организационной диаграммы: меню Вставка → SmartArt.\n\n
17. Добавление диаграммы: меню Вставка → Диаграмма.\n\n
18. Добавление управляющих кнопок: меню Вставка → Фигуры → Управляющие кнопки.\n\n
19. Добавление анимации для смены слайдов: выделить слайд → меню Анимация → выбор подходящей анимации и установка времени перехода или по щелчку мыши.\n\n
20. Добавление анимации для отдельных объектов: выделить объект (заголовок, картинку, таблицу …) → меню Анимация → на панели выбрать необходимый эффект → установить переход по щелчку или после предыдущего, либо длительность эффекта.</string>

    <string name="teory140">ТИПЫ ССЫЛОК В ЯЧЕЙКАХ</string>
    <string name="teory141">Формулы, записанные в ячейках таблицы, бывают относительными, абсолютными и смешанными.</string>
    <string name="teory142">Имена ячеек в относительной формуле автоматически меняются при переносе или копировании ячейки с формулой в другое место таблицы:</string>
    <string name="teory143">Имена ячеек в абсолютной формуле не меняются при переносе или копировании ячейки с формулой в другое место таблицы</string>
    <string name="teory144">Для указания того, что не меняется столбец, ставится знак $ перед буквой столбца. Для указания того, что не меняется строка, ставится знак $ перед номером строки:</string>
    <string name="teory145">В смешанных формулах меняется только относительная часть:</string>
    <string name="teory146">ПОСТРОЕНИЕ ДИАГРАММ</string>
    <string name="teory147">Диаграммы используются для наглядного представления табличных данных.\n\n
Разные типы диаграмм используются в зависимости от необходимого эффекта визуализации.\n\n
Так, круговая и кольцевая диаграммы отображают соотношение находящихся в выбранном диапазоне ячеек данных к их общей сумме. Иными словами, эти типы служат для представления доли отдельных составляющих в общей сумме.\n\n
Соответствие секторов круговой диаграммы (если она намеренно НЕ перевернута) начинается с «севера»: верхний сектор соответствует первой ячейке диапазона.</string>
    <string name="teory148">Типы диаграмм Линейчатая и Гистограмма (на левом рис.), а также График и Точечная (на рис. справа) отображают абсолютные значения в выбранном диапазоне ячеек.</string>
    <string name="teory149">СТАНДАРТНЫЕ ФУНКЦИИ EXCEL</string>


    <string name="teory150">Разбор задания 15.2:</string>
    <string name="teory151">Напишите программу, которая в последовательности натуральных чисел определяет максимальное число, оканчивающееся на 5. Программа получает на вход количество чисел в последовательности, а затем сами числа. В последовательности всегда имеется число, оканчивающееся на 5.
Количество чисел не превышает 1000. Введённые числа не превышают 30 000. Программа должна вывести одно число — максимальное число, оканчивающееся на 5.</string>
    <string name="teory152">Пример работы программы:</string>
    <string name="teory153">Решение:</string>



    <string name="task10">  В одной из кодировок Unicode каждый символ кодируется 16 битами. Вова написал текст (в нём нет лишних пробелов):\n\n
    «Ёж, лев, слон, олень, тюлень, носорог, крокодил, аллигатор — дикие животные».\n\n
    Ученик вычеркнул из списка название одного из животных. Заодно он вычеркнул ставшие лишними запятые и пробелы — два пробела не должны идти подряд.\n\n
    При этом размер нового предложения в данной кодировке оказался на 16 байт меньше, чем размер исходного предложения. Напишите в ответе вычеркнутое название животного.</string>
    <string name="task11">  В одной из кодировок Unicode каждый символ кодируется 16 битами. Ваня написал текст (в нём нет лишних пробелов):\n\n
    «Лев, тигр, ягуар, гепард, пантера, ягуарунди — кошачьи».\n\n
    Ученик вычеркнул из списка название одного из представителей семейства кошачьих. Заодно он вычеркнул ставшие лишними запятые и пробелы — два пробела не должны идти подряд.\n\n
    При этом размер нового предложения в данной кодировке оказался на 14 байт меньше, чем размер исходного предложения. Напишите в ответе вычеркнутое название представителя семейства кошачьих.</string>

    <string name="task20">Валя шифрует русские слова (последовательности букв), записывая вместо каждой буквы её код:\n\n
    Некоторые цепочки можно расшифровать не одним способом. Например, 00010101 может означать не только СКА, но и СНК. Даны три кодовые цепочки:\n\n
    10111101\n
    1010110\n
    10111000\n\n
    Найдите среди них ту, которая имеет только одну расшифровку, и запишите в ответе расшифрованное слово.</string>
    <string name="task21">Мальчики, играя в пиратов, придумали свой собственный шифр и передавали с помощью него друг другу сообщения. Ниже представлено одно из них. В сообщении присутствуют только буквы из приведённого фрагмента кодовой таблицы.\n\n
        Определите, какое сообщение закодировано в строчке !?!!?!???. В ответе запишите последовательность букв без запятых и других знаков препинания.</string>

    <string name="task30">Напишите наименьшее целое число x, для которого истинно высказывание:</string>
    <string name="task31">Для какого целого числа X ЛОЖНО высказывание:</string>

    <string name="task40">Между населёнными пунктами А, В, С, D, Е построены дороги, протяжённость которых (в километрах) приведена в таблице:\n\n
    Определите длину кратчайшего пути между пунктами А и E. Передвигаться можно только по дорогам, протяжённость которых указана в таблице.</string>
    <string name="task41">Между населёнными пунктами A, B, C, D, E построены дороги, протяжённость которых в (километрах) приведена в таблице.\n\n
    Определите длину кратчайшего пути между пунктами B и D. Передвигаться можно только по дорогам, протяжённость которых указана в таблице. Каждый пункт можно посетить только один раз.</string>

    <string name="task50">У исполнителя Альфа две команды, которым присвоены номера:\n\n
        1. прибавь 1;\n
        2. умножь на b\n\n
        (b — неизвестное натуральное число; b ≥ 2).\n
        Выполняя первую из них, Альфа увеличивает число на экране на 1, а выполняя вторую, умножает это число на b. Программа для исполнителя Альфа — это последовательность номеров команд. Известно, что программа 11211 переводит число 6 в число 82. Определите значение b.</string>
    <string name="task51">У исполнителя Квадратор две команды. которым присвоены номера:\n\n
    1.возведи в квадрат\n
    2.прибавь 3\n\n
    Первая из них возводит число на экране во вторую степень, вторая увеличивает его на 3.\n
    Составьте алгоритм получения из числа 1 числа 25, содержащий не более 5 команд. В ответе запишите только номера команд.
    </string>

    <string name="task60">Было проведено 9 запусков программы, при которых в качестве значений переменных s и t вводились следующие пары чисел:\n\n
    (1, 2); (11, 2); (1, 12); (11, 12); (–11, –12); (–11, 12); (–12, 11); (10, 10); (10, 5).\n\n
    Сколько было запусков, при которых программа напечатала «YES»?</string>
    <string name="task61">Было проведено 9 запусков программы, при которых в качестве значений переменных s и k вводились следующие пары чисел:\n\n
    (1,1); (8,4); (14,10); (20,1); (7,3); (10,5); (10,2); (4,1); (1,0).\n\n
    Сколько было запусков, при которых программа напечатала «ДА»?</string>

    <string name="task70">Доступ к файлу slon.txt, находящемуся на сервере circ.org, осуществляется по протоколу http. Фрагменты адреса файла закодированы буквами от А до Ж. Запишите последовательность этих букв, кодирующую адрес указанного файла в сети Интернет.\n\n
    A).txt\n
    Б)://\n
    B)http\n
    Г)circ\n
    Д)/\n
    Е).org\n
    Ж)slon</string>
    <string name="task71">Файл pig.pdf был выложен в Интернете по адресу http://mypigs.ru/pig.pdf. Потом его переместили в каталог work на сайте presentation.edu, доступ к которому осуществляется по протоколу ftp. Имя файла не изменилось.\n
    Фрагменты нового и старого адресов файла закодированы цифрами от 1 до 9. Запишите последовательность этих цифр, кодирующую адрес файла в сети Интернет после перемещения.\n\n
    1)http:/\n
    2)pig\n
    3)work\n
    4)presentation\n
    5).edu\n
    6)ftp:/\n
    7)/\n
    8).pdf\n
    9)mypigs</string>

    <string name="task80">В языке запросов поискового сервера для обозначения логической операции «ИЛИ» используется символ «|», а для обозначения логической операции «И» — символ «&amp;».\n
    В таблице приведены запросы и количество найденных по ним страниц некоторого сегмента сети Интернет.\n\n
    Какое количество страниц (в тысячах) будет найдено по запросу Рыбка?</string>
    <string name="task81">Какое количество страниц (в тысячах) будет найдено по запросу Лебедь?</string>

    <string name="task90">На рисунке — схема дорог, связывающих города А, Б, В, Г, Д, Е, Ж и К. По каждой дороге можно двигаться только в одном направлении, указанном стрелкой. Сколько существует различных путей из города А в город К, проходящих через город В?</string>
    <string name="task91">На рисунке — схема дорог, связывающих города А, Б, В, Г, Д, Е, Ж, З и И. По каждой дороге можно двигаться только в одном направлении, указанном стрелкой. Сколько существует различных путей из города А в город И, проходящих через город В?</string>

    <string name="task100">Среди приведённых ниже трёх чисел, записанных в различных системах счисления, найдите максимальное и запишите его в ответе в десятичной системе счисления. В ответе запишите только число, основание системы счисления указывать не нужно.</string>
    <string name="task101">Среди приведённых ниже трёх чисел, записанных в различных системах счисления, найдите максимальное и запишите его в ответе в десятичной системе счисления. В ответе запишите только число, основание системы счисления указывать не нужно.</string>


    <string name="res10">тюлень</string>
    <string name="res11">ягуар</string>

    <string name="res20">НОС</string>
    <string name="res21">РИТА</string>

    <string name="res30">2</string>
    <string name="res31">3</string>

    <string name="res40">6</string>
    <string name="res41">7</string>

    <string name="res50">10</string>
    <string name="res51">21222</string>

    <string name="res60">5</string>
    <string name="res61">4</string>

    <string name="res70">ВБГЕДЖА</string>
    <string name="res71">674573728</string>

    <string name="res80">570</string>
    <string name="res81">1700</string>

    <string name="res90">10</string>
    <string name="res91">12</string>

    <string name="res100">35</string>
    <string name="res101">146</string>

    <string name="teory">Теория</string>
    <string name="practic">Практика</string>
    <string name="left"><![CDATA[<-]]></string>
</resources>